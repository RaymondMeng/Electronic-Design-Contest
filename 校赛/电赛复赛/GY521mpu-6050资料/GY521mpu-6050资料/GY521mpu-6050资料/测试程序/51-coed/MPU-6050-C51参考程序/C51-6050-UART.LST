C51 COMPILER V7.06   C51_6050_UART                                                         12/26/2012 15:10:30 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE C51_6050_UART
OBJECT MODULE PLACED IN C51-6050-UART.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE C51-6050-UART.C BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          //****************************************
   2          // Update to MPU6050 by shinetop
   3          // MCU: STC89C52
   4          // 2012.3.1
   5          // 功能: 显示加速度计和陀螺仪的10位原始数据
   6          //****************************************
   7          // 使用单片机STC89C52
   8          // 晶振：11.0592M
   9          // 显示：串口
  10          // 编译环境 Keil uVision2
  11          //****************************************
  12          #include <REG52.H>      
  13          #include <math.h>    //Keil library  
  14          #include <stdio.h>   //Keil library     
  15          #include <INTRINS.H>
  16          typedef unsigned char  uchar;
  17          typedef unsigned short ushort;
  18          typedef unsigned int   uint;
  19          //****************************************
  20          // 定义51单片机端口
  21          //****************************************
  22          sbit    SCL=P1^5;                       //IIC时钟引脚定义
  23          sbit    SDA=P1^4;                       //IIC数据引脚定义
  24          //****************************************
  25          // 定义MPU6050内部地址
  26          //****************************************
  27          #define SMPLRT_DIV              0x19    //陀螺仪采样率，典型值：0x07(125Hz)
  28          #define CONFIG                  0x1A    //低通滤波频率，典型值：0x06(5Hz)
  29          #define GYRO_CONFIG             0x1B    //陀螺仪自检及测量范围，典型值：0x18(不自检，2000deg/s)
  30          #define ACCEL_CONFIG    0x1C    //加速计自检、测量范围及高通滤波频率，典型值：0x01(不自检，2G，5Hz)
  31          #define ACCEL_XOUT_H    0x3B
  32          #define ACCEL_XOUT_L    0x3C
  33          #define ACCEL_YOUT_H    0x3D
  34          #define ACCEL_YOUT_L    0x3E
  35          #define ACCEL_ZOUT_H    0x3F
  36          #define ACCEL_ZOUT_L    0x40
  37          #define TEMP_OUT_H              0x41
  38          #define TEMP_OUT_L              0x42
  39          #define GYRO_XOUT_H             0x43
  40          #define GYRO_XOUT_L             0x44    
  41          #define GYRO_YOUT_H             0x45
  42          #define GYRO_YOUT_L             0x46
  43          #define GYRO_ZOUT_H             0x47
  44          #define GYRO_ZOUT_L             0x48
  45          #define PWR_MGMT_1              0x6B    //电源管理，典型值：0x00(正常启用)
  46          #define WHO_AM_I                0x75    //IIC地址寄存器(默认数值0x68，只读)
  47          #define SlaveAddress    0xD0    //IIC写入时的地址字节数据，+1为读取
  48          //**************************************************************************************************
  49          //定义类型及变量
  50          //**************************************************************************************************
  51          uchar dis[6];                                   //显示数字(-511至512)的字符数组
  52          int     dis_data;                                       //变量
  53          //**************************************************************************************************
  54          //函数声明
  55          //**************************************************************************************************
C51 COMPILER V7.06   C51_6050_UART                                                         12/26/2012 15:10:30 PAGE 2   

  56          void  Delay5us();
  57          void  delay(unsigned int k);                                                                            //延时                                          
  58          void  lcd_printf(uchar *s,int temp_data);
  59          //********************************MPU6050操作函数***************************************************
  60          void  InitMPU6050();                                                                                    //初始化MPU6050
  61          void  I2C_Start();
  62          void  I2C_Stop();
  63          void  I2C_SendACK(bit ack);
  64          bit   I2C_RecvACK();
  65          void  I2C_SendByte(uchar dat);
  66          uchar I2C_RecvByte();
  67          void  I2C_ReadPage();
  68          void  I2C_WritePage();
  69          
  70          void  display_ACCEL_x();
  71          void  display_ACCEL_y();
  72          void  display_ACCEL_z();
  73          uchar Single_ReadI2C(uchar REG_Address);                                                //读取I2C数据
  74          void  Single_WriteI2C(uchar REG_Address,uchar REG_data);            //向I2C写入数据
  75          //********************************************************************************
  76          //整数转字符串
  77          //********************************************************************************
  78          void lcd_printf(uchar *s,int temp_data)
  79          {
  80   1              if(temp_data<0)
  81   1              {
  82   2                      temp_data=-temp_data;
  83   2                      *s='-';
  84   2              }
  85   1              else *s=' ';
  86   1      
  87   1              *++s =temp_data/10000+0x30;
  88   1              temp_data=temp_data%10000;     //取余运算
  89   1      
  90   1              *++s =temp_data/1000+0x30;
  91   1              temp_data=temp_data%1000;     //取余运算
  92   1      
  93   1              *++s =temp_data/100+0x30;
  94   1              temp_data=temp_data%100;     //取余运算
  95   1              *++s =temp_data/10+0x30;
  96   1              temp_data=temp_data%10;      //取余运算
  97   1              *++s =temp_data+0x30;   
  98   1      }
  99          //******************************************************************************************************
 100          //串口初始化
 101          //*******************************************************************************************************
 102          void init_uart()
 103          {
 104   1              TMOD=0x21;                              
 105   1              TH1=0xfd;               //实现波特率9600（系统时钟11.0592MHZ）          
 106   1              TL1=0xfd;               
 107   1                      
 108   1              SCON=0x50;
 109   1              PS=1;      //串口中断设为高优先级别
 110   1              TR0=1;     //启动定时器                 
 111   1              TR1=1;
 112   1              ET0=1;     //打开定时器0中断                    
 113   1              ES=1;   
 114   1              EA=1;
 115   1      }
 116          //*************************************************************************************************
 117          //串口发送函数
C51 COMPILER V7.06   C51_6050_UART                                                         12/26/2012 15:10:30 PAGE 3   

 118          //*************************************************************************************************
 119          void  SeriPushSend(uchar send_data)
 120          {
 121   1          SBUF=send_data;  
 122   1              while(!TI);TI=0;          
 123   1      }
 124          //*************************************************************************************************
 125          //************************************延时*********************************************************
 126          //*************************************************************************************************
 127          void delay(unsigned int k)      
 128          {                                               
 129   1              unsigned int i,j;                               
 130   1              for(i=0;i<k;i++)
 131   1              {                       
 132   2                      for(j=0;j<121;j++);
 133   2              }                                               
 134   1      }
 135          //************************************************************************************************
 136          //延时5微秒(STC90C52RC@12M)
 137          //不同的工作环境,需要调整此函数
 138          //注意当改用1T的MCU时,请调整此延时函数
 139          //************************************************************************************************
 140          void Delay5us()
 141          {
 142   1              _nop_();_nop_();_nop_();_nop_();
 143   1              _nop_();_nop_();_nop_();_nop_();
 144   1              _nop_();_nop_();_nop_();_nop_();
 145   1              _nop_();_nop_();_nop_();_nop_();
 146   1              _nop_();_nop_();_nop_();_nop_();
 147   1              _nop_();_nop_();_nop_();_nop_();
 148   1      }
 149          //*************************************************************************************************
 150          //I2C起始信号
 151          //*************************************************************************************************
 152          void I2C_Start()
 153          {
 154   1          SDA = 1;                    //拉高数据线
 155   1          SCL = 1;                    //拉高时钟线
 156   1          Delay5us();                 //延时
 157   1          SDA = 0;                    //产生下降沿
 158   1          Delay5us();                 //延时
 159   1          SCL = 0;                    //拉低时钟线
 160   1      }
 161          //*************************************************************************************************
 162          //I2C停止信号
 163          //*************************************************************************************************
 164          void I2C_Stop()
 165          {
 166   1          SDA = 0;                    //拉低数据线
 167   1          SCL = 1;                    //拉高时钟线
 168   1          Delay5us();                 //延时
 169   1          SDA = 1;                    //产生上升沿
 170   1          Delay5us();                 //延时
 171   1      }
 172          //**************************************************************************************************
 173          //I2C发送应答信号
 174          //入口参数:ack (0:ACK 1:NAK)
 175          //**************************************************************************************************
 176          void I2C_SendACK(bit ack)
 177          {
 178   1          SDA = ack;                  //写应答信号
 179   1          SCL = 1;                    //拉高时钟线
C51 COMPILER V7.06   C51_6050_UART                                                         12/26/2012 15:10:30 PAGE 4   

 180   1          Delay5us();                 //延时
 181   1          SCL = 0;                    //拉低时钟线
 182   1          Delay5us();                 //延时
 183   1      }
 184          //****************************************************************************************************
 185          //I2C接收应答信号
 186          //****************************************************************************************************
 187          bit I2C_RecvACK()
 188          {
 189   1          SCL = 1;                    //拉高时钟线
 190   1          Delay5us();                 //延时
 191   1          CY = SDA;                   //读应答信号
 192   1          SCL = 0;                    //拉低时钟线
 193   1          Delay5us();                 //延时
 194   1          return CY;
 195   1      }
 196          //*****************************************************************************************************
 197          //向I2C总线发送一个字节数据
 198          //*****************************************************************************************************
 199          void I2C_SendByte(uchar dat)
 200          {
 201   1          uchar i;
 202   1          for (i=0; i<8; i++)         //8位计数器
 203   1          {
 204   2              dat <<= 1;              //移出数据的最高位
 205   2              SDA = CY;               //送数据口
 206   2              SCL = 1;                //拉高时钟线
 207   2              Delay5us();             //延时
 208   2              SCL = 0;                //拉低时钟线
 209   2              Delay5us();             //延时
 210   2          }
 211   1          I2C_RecvACK();
 212   1      }
 213          //*****************************************************************************************************
 214          //从I2C总线接收一个字节数据
 215          //******************************************************************************************************
 216          uchar I2C_RecvByte()
 217          {
 218   1          uchar i;
 219   1          uchar dat = 0;
 220   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 221   1          for (i=0; i<8; i++)         //8位计数器
 222   1          {
 223   2              dat <<= 1;
 224   2              SCL = 1;                //拉高时钟线
 225   2              Delay5us();             //延时
 226   2              dat |= SDA;             //读数据               
 227   2              SCL = 0;                //拉低时钟线
 228   2              Delay5us();             //延时
 229   2          }
 230   1          return dat;
 231   1      }
 232          //*****************************************************************************************************
 233          //向I2C设备写入一个字节数据
 234          //*****************************************************************************************************
 235          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 236          {
 237   1          I2C_Start();                  //起始信号
 238   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 239   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 240   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 241   1          I2C_Stop();                   //发送停止信号
C51 COMPILER V7.06   C51_6050_UART                                                         12/26/2012 15:10:30 PAGE 5   

 242   1      }
 243          //*******************************************************************************************************
 244          //从I2C设备读取一个字节数据
 245          //*******************************************************************************************************
 246          uchar Single_ReadI2C(uchar REG_Address)
 247          {
 248   1              uchar REG_data;
 249   1              I2C_Start();                   //起始信号
 250   1              I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 251   1              I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始      
 252   1              I2C_Start();                   //起始信号
 253   1              I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 254   1              REG_data=I2C_RecvByte();       //读出寄存器数据
 255   1              I2C_SendACK(1);                //接收应答信号
 256   1              I2C_Stop();                    //停止信号
 257   1              return REG_data;
 258   1      }
 259          //******************************************************************************************************
 260          //初始化MPU6050
 261          //******************************************************************************************************
 262          void InitMPU6050()
 263          {
 264   1              Single_WriteI2C(PWR_MGMT_1, 0x00);      //解除休眠状态
 265   1              Single_WriteI2C(SMPLRT_DIV, 0x07);
 266   1              Single_WriteI2C(CONFIG, 0x06);
 267   1              Single_WriteI2C(GYRO_CONFIG, 0x18);
 268   1              Single_WriteI2C(ACCEL_CONFIG, 0x01);
 269   1      }
 270          //******************************************************************************************************
 271          //合成数据
 272          //******************************************************************************************************
 273          int GetData(uchar REG_Address)
 274          {
 275   1              uchar H,L;
 276   1              H=Single_ReadI2C(REG_Address);
 277   1              L=Single_ReadI2C(REG_Address+1);
 278   1              return ((H<<8)+L);   //合成数据
 279   1      }
 280          //******************************************************************************************************
 281          //超级终端（串口调试助手）上显示10位数据
 282          //******************************************************************************************************
 283          void Display10BitData(int value)
 284          {  uchar i;
 285   1      //      value/=64;                                                      //转换为10位数据
 286   1              lcd_printf(dis, value);                 //转换数据显示
 287   1              for(i=0;i<6;i++)
 288   1              {
 289   2          SeriPushSend(dis[i]);
 290   2          }
 291   1      
 292   1        //    DisplayListChar(x,y,dis,4);     //启始列，行，显示数组，显示长度
 293   1      }
 294          //*******************************************************************************************************
 295          //主程序
 296          //*******************************************************************************************************
 297          void main()
 298          { 
 299   1              delay(500);             //上电延时              
 300   1              init_uart();
 301   1              InitMPU6050();  //初始化MPU6050
 302   1              delay(150);
 303   1              while(1)
C51 COMPILER V7.06   C51_6050_UART                                                         12/26/2012 15:10:30 PAGE 6   

 304   1              {
 305   2              
 306   2                      Display10BitData(GetData(ACCEL_XOUT_H));        //显示X轴加速度
 307   2                      Display10BitData(GetData(ACCEL_YOUT_H));        //显示Y轴加速度
 308   2                      Display10BitData(GetData(ACCEL_ZOUT_H));        //显示Z轴加速度
 309   2                      Display10BitData(GetData(GYRO_XOUT_H));         //显示X轴角速度
 310   2                      Display10BitData(GetData(GYRO_YOUT_H));         //显示Y轴角速度
 311   2                      Display10BitData(GetData(GYRO_ZOUT_H));         //显示Z轴角速度
 312   2           
 313   2                      SeriPushSend(0x0d); 
 314   2              SeriPushSend(0x0a);//换行，回车
 315   2                      delay(2000);
 316   2              }
 317   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    688    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
